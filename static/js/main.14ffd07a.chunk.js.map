{"version":3,"sources":["components/Form.js","App.js","index.js"],"names":["Form","text","toggle","setToggle","orderList","setOrderList","useState","value","setValue","handleSubmit","e","preventDefault","list","match","filter","item","map","index","val","id","Math","random","complete","className","onSubmit","name","rows","cols","autoComplete","onChange","target","required","placeholder","type","App","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","unselectable","onClick","update","style","opacity","length","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmCeA,MAjCf,YAAqE,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAAgB,EAEtCC,mBAAS,IAF6B,mBAEzDC,EAFyD,KAElDC,EAFkD,KAQ1DC,EAAe,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOL,EAAMM,MAAM,SAASC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,KAAI,SAACD,EAAME,GAAP,MAAwB,CAAEC,IAAKH,EAAMI,GAAIC,KAAKC,UAAYJ,EAAM,GAAIK,UAAU,MAChJjB,EAAa,GAAD,mBAAKD,GAAL,YAAmBQ,KAC/BJ,EAAS,IACTL,GAAU,IAGd,OACI,uBAAMoB,UAAU,aAAaC,SAAUf,EAAvC,UACI,0BACIU,GAAG,OACHM,KAAK,OACLC,KAAK,KACLC,KAAK,KACLC,aAAa,MACbC,SApBS,SAAAnB,GACjBF,EAASE,EAAEoB,OAAOvB,QAoBVwB,UAAU,EACVC,YAAa/B,IAEjB,wBAAQsB,UAAU,WAAWU,KAAK,SAAST,SAAUf,EAArD,SAAoEP,EAAS,MAAQ,eC+BlFgC,MA1Df,WAEC,IAFc,EAGoB5B,oBADd,kBAAM6B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAAiB,MAFpE,mBAGPnC,EAHO,KAGIC,EAHJ,OAIcC,oBAAS,GAJvB,mBAIPJ,EAJO,KAICC,EAJD,KAMdqC,qBAAU,WACTH,OAAOC,aAAaG,QAAQ,YAAaN,KAAKO,UAAUtC,MACtD,CAACA,IAGJ,IAWMQ,EAAOR,EAAUY,KAAI,SAAAD,GAC1B,OACC,qBAAKQ,UAAU,OAAqBoB,aAAa,KAAjD,SACC,oBAAIC,QAAS,kBAdD,SAAA7B,GACd,IAAMH,EAAOR,EAAUY,KAAI,SAAAN,GAAC,OAAIA,EAAES,KAAOJ,EAAKI,GAAKT,EAAI,CAAEQ,IAAKR,EAAEQ,IAAKC,GAAIT,EAAES,GAAIG,UAAWZ,EAAEY,UAAaZ,KACzGL,EAAaO,GAYQiC,CAAO9B,IAAO+B,MAAO,CAAEC,QAAShC,EAAKO,SAAW,GAAK,GAAxE,SAA8EP,EAAKG,OADzDH,EAAKI,OAMlC,OACC,sBAAKI,UAAU,MAAf,UACC,oBAAIA,UAAU,OAAd,wBACA,wBAAQJ,GAAIf,EAAU4C,OAAS,EAAI,cAAgB,aAAcF,MAAO,CAACG,MAAO/C,EAAS,UAAY,QAAS0C,QAAS,kBAAMzC,GAAWD,IAAxI,eACEE,EAAU4C,OAKX,kCACE9C,EACA,qBAAKqB,UAAU,YAAf,SACC,cAAC,EAAD,CAAMtB,KAAM,YAAaC,OAAQA,EAAQC,UAAWA,EAAWC,UAAWA,EAAWC,aAAcA,MAGpG,sBAAKkB,UAAU,YAAf,UACC,oBAAIA,UAAU,OAAd,SACEX,IAEF,wBAAQW,UAAU,WAAWqB,QAjCpB,WACd,IAAMhC,EAAOR,EAAUU,QAAO,SAAAC,GAAI,OAAsB,IAAlBA,EAAKO,YAC3CjB,EAAaO,IA+BR,yBAdH,qBAAKW,UAAU,YAAf,SACC,cAAC,EAAD,CAAMtB,KAAM,cAAeC,OAAQA,EAAQC,UAAWA,EAAWC,UAAWA,EAAWC,aAAcA,UCjC1G6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14ffd07a.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction Form({ text, toggle, setToggle, orderList, setOrderList }) {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const list = value.match(/(.+)/g).filter(item => item !== '').map((item, index) => item = { val: item, id: Math.random() * (index+1), complete: false });\r\n        setOrderList([...orderList, ...list]);\r\n        setValue('');\r\n        setToggle(false);\r\n    };\r\n\r\n    return (\r\n        <form className=\"input-form\" onSubmit={handleSubmit}>\r\n            <textarea\r\n                id=\"list\"\r\n                name=\"list\"\r\n                rows=\"25\"\r\n                cols=\"33\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n                required={true}\r\n                placeholder={text}>\r\n            </textarea>\r\n            <button className=\"btn butt\" type=\"submit\" onSubmit={handleSubmit}>{toggle ? \"add\" : \"create\"}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import { useState, useEffect } from 'react';\nimport Form from './components/Form';\n\nfunction App() {\n\n\tconst initialData = () => JSON.parse(window.localStorage.getItem('orderList')) || [];\n\tconst [orderList, setOrderList] = useState(initialData);\n\tconst [toggle, setToggle] = useState(false);\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('orderList', JSON.stringify(orderList));\n\t}, [orderList]);\n\n\t// Mutations\n\tconst update = item => {\n\t\tconst list = orderList.map(e => e.id === item.id ? e = { val: e.val, id: e.id, complete: !e.complete } : e);\n\t\tsetOrderList(list);\n\t};\n\n\tconst remove = () => {\n\t\tconst list = orderList.filter(item => item.complete === false);\n\t\tsetOrderList(list);\n\t};\n\n\t// Map List Data\n\tconst list = orderList.map(item => {\n\t\treturn (\n\t\t\t<div className=\"line\" key={item.id} unselectable=\"on\">\n\t\t\t\t<li onClick={() => update(item)} style={{ opacity: item.complete ? .2 : 1 }}>{item.val}</li>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<h1 className=\"kirk\">Kirk's App</h1>\n\t\t\t<button id={orderList.length > 0 ? \"add-showing\" : \"add-remove\"} style={{color: toggle ? '#009aec' : '#fff'}} onClick={() => setToggle(!toggle)}>+</button>\n\t\t\t{!orderList.length ?\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Form text={'input items'} toggle={toggle} setToggle={setToggle} orderList={orderList} setOrderList={setOrderList} />\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<section>\n\t\t\t\t\t{toggle ? \n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Form text={'add items'} toggle={toggle} setToggle={setToggle} orderList={orderList} setOrderList={setOrderList} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<ul className=\"list\">\n\t\t\t\t\t\t\t\t{list}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<button className=\"btn butt\" onClick={remove}>remove</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</section>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}