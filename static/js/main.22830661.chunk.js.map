{"version":3,"sources":["components/supplylist/SupplyList.js","components/addform/AddForm.js","components/tessio/Tessio.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["SupplyList","props","className","onSubmit","handleSubmit","id","name","rows","cols","autoComplete","value","onChange","handleChange","required","placeholder","type","AddForm","useState","show","setShow","toggle","onClick","handleItemSubmit","Tessio","list","tessio","length","map","item","index","unselectable","key","style","opacity","complete","includes","completeItem","window","location","reload","Dashboard","e","setState","target","preventDefault","addList","state","filter","match","console","log","i","indexOf","splice","removeCompletedItems","array","forEach","push","startOver","localStorage","clear","restart","bind","json","getItem","this","JSON","parse","error","prevProps","prevState","stringify","setItem","currentDate","Date","toLocaleDateString","undefined","year","month","day","currentDay","getDay","display","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22830661.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../styles/dashboard.css';\r\n\r\nconst SupplyList = (props) => {\r\n    return (\r\n        <div>\r\n            <form className=\"form-container\" onSubmit={props.handleSubmit}>\r\n                <textarea \r\n                    id=\"list\" \r\n                    name=\"list\" \r\n                    rows=\"25\" \r\n                    cols=\"33\"\r\n                    autoComplete=\"off\"\r\n                    value={props.value}\r\n                    onChange={props.handleChange}\r\n                    required={true}\r\n                    placeholder=\"input list\">\r\n                </textarea>\r\n                <button className=\"submit\" type=\"submit\" onSubmit={props.handleSubmit}> - create list -</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SupplyList;","import React, { useState } from 'react';\r\n\r\nconst AddForm = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const toggle = () => setShow(!show);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"add\" onClick={toggle}>+ item</h2>\r\n            { show ?\r\n                <form className=\"add-input\" onClick={props.handleItemSubmit}>\r\n                    <input\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"off\"\r\n                        value={props.value}\r\n                        onChange={props.handleChange}\r\n                        required={true}\r\n                        placeholder=\"add item\"\r\n                    />\r\n                    <button className=\"add-input-btn\" onClick={toggle} onSubmit={props.handleItemSubmit}>add</button>\r\n                </form>\r\n                :\r\n                <div></div>    \r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default AddForm;","import React from 'react';\r\nimport SupplyList from '../supplylist/SupplyList';\r\nimport AddForm from '../addform/AddForm';\r\nimport '../../styles/dashboard.css';\r\n\r\nconst Tessio = (props) => {\r\n\r\n    const list = !props.tessio ? window.location.reload(true) : props.tessio.length ? (\r\n        props.tessio.map((item, index) => {\r\n            return (\r\n                <div className=\"item-container\" unselectable=\"on\" key={index}>\r\n                    <div className=\"blue-line\">\r\n                        <span className=\"item-complete\" style={{opacity : props.complete.includes(item) ? .2 : 1}} onClick={() => {props.completeItem(index)}}>\r\n                            <span className=\"item\">{item}</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (\r\n        <div className=\"supplylist-container\">\r\n            <SupplyList \r\n                value={props.value}\r\n                tessio={props.tessio}\r\n                handleChange={props.handleChange}\r\n                handleSubmit={props.handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n    \r\n    return (\r\n        <div className=\"tessio-container\">\r\n            { list.length ? \r\n                <AddForm \r\n                    value={props.value}\r\n                    tessio={props.tessio}\r\n                    handleChange={props.handleChange}\r\n                    handleItemSubmit={props.handleItemSubmit}\r\n                />\r\n            :\r\n                <div></div>\r\n            }\r\n            <div className=\"list\">\r\n                {list}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Tessio;","import React from 'react';\r\nimport Tessio from '../tessio/Tessio';\r\nimport '../../styles/dashboard.css';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            tessio : [],\r\n            complete : [],\r\n            restart : false\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        this.handleItemSubmit=this.handleItemSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        try {\r\n            const json = localStorage.getItem('data');\r\n            this.setState({...JSON.parse(json)});\r\n        } catch (error) {};\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {  \r\n        const json = JSON.stringify(this.state);\r\n        localStorage.setItem('data', json);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({value : e.target.value});\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.addList(this.state);\r\n        this.setState({value : \"\"});\r\n    }\r\n    handleItemSubmit = (e) => {\r\n        e.preventDefault();\r\n        let list = [...this.state.tessio, this.state.value];\r\n        list = list.filter(item => item !== \"\");\r\n        this.setState({tessio : list})\r\n        this.setState({value : \"\"});\r\n    }\r\n    \r\n    addList = (list) => {\r\n        list = this.state.value.match(/(.+)/g);\r\n        list = list.filter(item => item !== \"\");\r\n        this.setState({tessio : list}, () => {\r\n            console.log(\"tessio \", this.state.tessio);\r\n        });\r\n    }\r\n    completeItem = (index) => {\r\n        if(this.state.complete.includes(this.state.tessio[index])) {\r\n            const i = this.state.complete.indexOf(this.state.tessio[index]);\r\n            let complete = this.state.complete;\r\n            complete.splice(i, 1);\r\n            this.setState({complete : complete}, () => {\r\n                console.log(\"complete \", this.state.complete);\r\n            });\r\n        } else {\r\n            const complete = [...this.state.complete, this.state.tessio[index]];\r\n            this.setState({complete : complete}, () => {\r\n                console.log(\"complete \",this.state.complete);\r\n            });\r\n        }\r\n    }\r\n    removeCompletedItems = (array) => {\r\n        let tessio = [], complete = [];\r\n        this.state.tessio.forEach(item => !this.state.complete.includes(item) ? tessio.push(item) : item);\r\n        this.setState({tessio : tessio});\r\n        this.setState({complete : complete});\r\n    }\r\n    startOver = () => {\r\n        localStorage.clear();\r\n        window.location.reload(true);\r\n    }\r\n    toggle = () => {\r\n        const restart = !this.state.restart;\r\n        this.setState({restart : restart});\r\n    }\r\n    render() {\r\n        const currentDate = new Date().toLocaleDateString(undefined, {year: 'numeric', month: 'long', day: 'numeric'});\r\n        const currentDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][new Date().getDay()];\r\n\r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <div className=\"dashboard-head-container\">\r\n                    <h1>{currentDate}</h1>\r\n                    <h2>{currentDay}</h2>\r\n                </div>\r\n                { this.state.restart ? (\r\n                    <div className=\"start-over-modal\">\r\n                        <span className=\"restart-ask\">Start Over? </span>\r\n                        <button className=\"restart-btns\" onClick={this.startOver}>yes</button>\r\n                        <button className=\"restart-btns\" onClick={this.toggle}>no</button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                    </div>\r\n                )}\r\n                <div className=\"dashboard-body-container\">\r\n                    <div>\r\n                        <Tessio \r\n                            value={this.state.value}\r\n                            tessio={this.state.tessio}\r\n                            complete={this.state.complete}\r\n                            completeItem={this.completeItem}\r\n                            handleChange={this.handleChange}\r\n                            handleSubmit={this.handleSubmit}  \r\n                            handleItemSubmit={this.handleItemSubmit}  \r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"dashboard-foot-container\" style={{display : this.state.tessio.length ? \"block\" : \"none\"}}>\r\n                    <button className=\"submit\" onClick={this.removeCompletedItems}>- refresh list -</button>\r\n                    <button className=\"start-over\" onClick={this.toggle}>start over</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './reset.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}